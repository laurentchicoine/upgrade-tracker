<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_27018_upgr_track_tracked_tables</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_27018_upgr_track_tracked_tables">active=true^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Make sure table is not already tracked</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	var alreadyTrackedBy = [];
	var table = current.getValue('table');
	var tables = [table];
	if(current.inherit){
		tables = new GlideTableHierarchy(table).getAllExtensions();
	}
	
	var trackedGr = new GlideRecord(current.getRecordClassName());
	trackedGr.addActiveQuery();
	trackedGr.addQuery('sys_id', '!=', current.sys_id);
	trackedGr.query();
	while(trackedGr.next()){
		var trackedGrTable = trackedGr.getValue('table');
		//Check if table or one of the extended table is already directly tracked
		//This ensure that all extended tables are taken into account
		if(tables.indexOf(trackedGrTable) > -1){
			alreadyTrackedBy.push(trackedGrTable);
		}
		//If the tracked table has inheritence, check if table is already tracked by a parent table
		//This ensure all tables from which the table is extended from are taken into account
		else if(trackedGr.inherit){
			var trackedGrTables = new GlideTableHierarchy(trackedGrTable).getAllExtensions();
			if(trackedGrTables.indexOf(table) > -1){
				alreadyTrackedBy.push(trackedGrTable);
			}
		}
	}
	
	if(alreadyTrackedBy.length > 0){
		gs.addErrorMessage(gs.getMessage("This table or one of its extensions are already tracked by: {0}", alreadyTrackedBy.toString()));
		current.setAbortAction(true);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-14 12:50:46</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>eae1ed360f423200f52b09ece1050e1f</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>Make sure table is not already tracked</sys_name>
        <sys_overrides/>
        <sys_package display_value="Upgrade Tracker" source="x_27018_upgr_track">8cd59db60f023200f52b09ece1050e6d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Upgrade Tracker">8cd59db60f023200f52b09ece1050e6d</sys_scope>
        <sys_update_name>sys_script_eae1ed360f423200f52b09ece1050e1f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-04-14 21:26:55</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=eae1ed360f423200f52b09ece1050e1f"/>
</record_update>
